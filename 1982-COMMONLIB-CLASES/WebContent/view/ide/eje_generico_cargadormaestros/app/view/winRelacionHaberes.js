/*
 * File: app/view/winRelacionHaberes.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.winRelacionHaberes', {
    extend: 'Ext.window.Window',
    alias: 'widget.winRelacionHaberes',

    requires: [
        'MyApp.view.winRelacionHaberesViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Column',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Hidden',
        'Ext.form.field.Checkbox'
    ],

    viewModel: {
        type: 'winrelacionhaberes'
    },
    constrain: true,
    height: 644,
    id: 'winRelacionHaberes',
    width: 753,
    layout: 'border',
    title: 'Relaci&oacute;n Haberes',
    maximizable: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'gridpanel',
            region: 'west',
            split: true,
            width: 340,
            collapsible: true,
            header: false,
            title: 'Grid',
            store: 'jsonHaberesClasificacion',
            viewConfig: {
                listeners: {
                    cellclick: 'onTableCellClick'
                }
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'id_corr',
                    text: 'Id Corr'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'id_motor',
                    text: 'Id Motor'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'colum_name',
                    text: 'Conceptos',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'alias',
                    text: 'Alias'
                },
                {
                    xtype: 'gridcolumn',
                    width: 35,
                    dataIndex: 'id_tp',
                    text: 'TP'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'orden',
                    text: 'Orden'
                },
                {
                    xtype: 'gridcolumn',
                    width: 50,
                    dataIndex: 'wp_indic_papeleta',
                    text: 'Visible'
                },
                {
                    xtype: 'gridcolumn',
                    width: 50,
                    dataIndex: 'haber_variable',
                    text: 'Variable'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'unidad',
                    text: 'Unidad'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'tip_unidad',
                    text: 'Tip Unidad'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    width: 40,
                    dataIndex: 'definido',
                    text: 'Def'
                },
                {
                    xtype: 'gridcolumn',
                    width: 35,
                    dataIndex: 'is_total',
                    text: 'Total'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'form',
            region: 'center',
            id: 'panelRelacionHaber',
            layout: 'form',
            header: false,
            title: 'My Panel',
            items: [
                {
                    xtype: 'textfield',
                    fieldLabel: 'Nombre',
                    name: 'colum_name',
                    readOnly: true,
                    maxLength: 150
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Alias',
                    name: 'alias',
                    maxLength: 150
                },
                {
                    xtype: 'combobox',
                    fieldLabel: 'id_tp',
                    name: 'id_tp',
                    allowBlank: false,
                    editable: false,
                    queryMode: 'local',
                    store: 'directHaberesTipo',
                    valueField: 'value'
                },
                {
                    xtype: 'combobox',
                    fieldLabel: 'Posici&oacute;n',
                    name: 'orden',
                    allowBlank: false,
                    editable: false,
                    queryMode: 'local',
                    store: 'directOrder'
                },
                {
                    xtype: 'combobox',
                    fieldLabel: '¿Es visible?',
                    name: 'wp_indic_papeleta',
                    allowBlank: false,
                    editable: false,
                    queryMode: 'local',
                    store: 'directBoolean',
                    valueField: 'value'
                },
                {
                    xtype: 'combobox',
                    fieldLabel: '¿Es variable?',
                    name: 'haber_variable',
                    allowBlank: false,
                    editable: false,
                    queryMode: 'local',
                    store: 'directBoolean',
                    valueField: 'value'
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Unidad',
                    name: 'unidad',
                    maxLength: 50
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Tip. Unidad',
                    name: 'tip_unidad',
                    value: 0,
                    inputType: 'number'
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: 'Label',
                    name: 'id_motor'
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: 'Label',
                    name: 'id_corr'
                },
                {
                    xtype: 'checkboxfield',
                    fieldLabel: 'Label',
                    hideLabel: true,
                    name: 'is_total',
                    value: 1,
                    boxLabel: 'Representa el total',
                    inputValue: '1',
                    uncheckedValue: '0'
                },
                {
                    xtype: 'checkboxfield',
                    fieldLabel: 'Label',
                    hideLabel: true,
                    name: 'is_liquido',
                    boxLabel: 'Representa L&iacute;quido (Neto)',
                    inputValue: '1',
                    uncheckedValue: '0'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = Ext.getCmp("panelRelacionHaber").getForm();

                                form.submit({
                                    url: '../../../servlet/EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&' +
                                    'modulo=eje_generico_cargadormaestros&thing=RelacionHaberesMotor&accion=upd',
                                    waitMsg: 'Guardando...',
                                    method: 'POST',
                                    success: function (form, action) {
                                        var json = action.result;

                                        Ext.getStore("jsonHaberesClasificacion").load();
                                        Ext.Msg.alert('Success', "Información guardada con exito");
                                    },
                                    failure: function (form, action) {
                                        var json = action.result;

                                        Ext.Msg.alert('Failed', json.message);
                                    }
                                });


                            },
                            id: 'btn_guardar_haber',
                            icon: '../../images/btns/tick.ico',
                            text: 'Guardar'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.getCmp("panelRelacionHaber").setDisabled(true);
                            },
                            id: 'btn_cancelar_haber',
                            icon: '../../images/btns/cross.ico',
                            text: 'Cancelar'
                        }
                    ]
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'combobox',
                    width: 327,
                    fieldLabel: 'Motor',
                    editable: false,
                    displayField: 'motor',
                    store: 'jsonMotor',
                    valueField: 'id_motor',
                    listeners: {
                        change: 'onComboboxChange'
                    }
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {

                        Ext.getStore("jsonHaberesClasificacion").load({
                            "omitCache":"true"
                        });

                    },
                    icon: '../../images/btns/arrow_refresh.ico'
                }
            ]
        }
    ],
    listeners: {
        render: 'onWinRelacionHaberesRender'
    },

    onTableCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
                var form = Ext.getCmp('panelRelacionHaber');
                form.setDisabled(false);
                form.loadRecord(record);

    },

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
                Ext.getStore("jsonHaberesClasificacion").getProxy().setExtraParam("id_motor",newValue);
                Ext.getStore("jsonHaberesClasificacion").load();
    },

    onWinRelacionHaberesRender: function(component, eOpts) {
                    var form = Ext.getCmp('panelRelacionHaber');
                    form.setDisabled(true);
    }

});
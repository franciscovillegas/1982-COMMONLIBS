/*
 * File: app/view/winDataLoaded.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.winDataLoaded', {
    extend: 'Ext.window.Window',
    alias: 'widget.winDataLoaded',

    requires: [
        'MyApp.view.winDataLoadedViewModel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.form.Panel',
        'Ext.button.Button',
        'Ext.toolbar.Paging',
        'Ext.form.field.Hidden'
    ],

    viewModel: {
        type: 'windataloaded'
    },
    constrain: true,
    height: 577,
    id: 'winDataLoaded',
    width: 931,
    layout: 'border',
    title: 'Data pendiente por importar',
    maximizable: true,
    minimizable: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            region: 'west',
            split: true,
            id: 'panel_left',
            width: 350,
            layout: 'border',
            collapsible: true,
            header: false,
            title: 'My Panel',
            items: [
                {
                    xtype: 'combobox',
                    region: 'north',
                    id: 'select_peri_id',
                    fieldLabel: 'Label',
                    hideLabel: true,
                    readOnly: false,
                    editable: false,
                    displayField: 'peri_id',
                    store: 'jsonPeriodo',
                    valueField: 'peri_id',
                    listeners: {
                        change: 'onComboboxChange'
                    }
                },
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'jsonInstancia',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id_carga',
                            text: 'ID'
                        },
                        {
                            xtype: 'gridcolumn',
                            maxWidth: 120,
                            minWidth: 120,
                            width: 120,
                            dataIndex: 'fecha',
                            text: 'Fecha'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'fecha_update',
                            text: 'Fecha Update'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'peri_id',
                            text: 'Peri Id'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'peri',
                            text: 'Peri'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id_motor',
                            text: 'Id Motor'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'motor',
                            text: 'Motor'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id_tipoarchivo',
                            text: 'Id Tipoarchivo'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'archivo',
                            text: 'Tipoarchivo',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id_archivo',
                            text: 'Id Archivo'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'rut_responsable',
                            text: 'Rut Responsable'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'nombres',
                            text: 'Nombres'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'ape_paterno',
                            text: 'Ape Paterno'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'cant_filas',
                            text: 'Cant Filas'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'cant_ok',
                            text: 'Cant Ok'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'cant_error',
                            text: 'Cant Error'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'nombre_tabla',
                            text: 'Nombre Tabla'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'definition_tabla',
                            text: 'Definition Tabla'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'time_ms',
                            text: 'Time Ms'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id_estado',
                            text: 'Id Estado'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'estado',
                            text: 'Estado'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 24,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                        Ext.getCmp("send_id_carga").setValue( record.get("id_carga") );
                                        Ext.getCmp("send_peri_id").setValue(  Ext.getCmp("select_peri_id").getValue() );

                                        Ext.Ajax.request({
                                            url: '../../../servlet/EjeCore',
                                            method: 'POST',
                                            params: {
                                                claseweb: 'cl.eje.view.sencha.ConfSegura',
                                                modulo: 'eje_generico_cargadormaestros',
                                                thing: 'UploadDefinition',
                                                accion: 'get',
                                                id_carga: record.get("id_carga")
                                            },

                                            callback: function(options, success, response) {
                                                var json = Ext.decode(response.responseText);

                                                /*CREA MODELOS*/
                                                var modelList = new Array();
                                                Ext.each(json.data, function(p,v){
                                                    var c = {name: p.name,
                                                            type: 'string',
                                                        useNull:true };

                                                    modelList.push(c);
                                                });


                                                /*CREA STORE*/
                                                var jsonStore  = Ext.create('Ext.data.Store',{
                                                    fields : modelList,
                                                    pageSize: 100,
                                                    storeId: 'jsonInstanciaDetalle',
                                                    remoteSort:true,
                                                    proxy: {
                                                        type: 'ajax',
                                                        url: '../../../servlet/EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&modulo=eje_generico_cargadormaestros&thing=UploadDetalle&accion=get',
                                                        reader: {
                                                            type: 'json',
                                                            root: 'data'
                                                        }
                                                    }
                                                });

                                                /*CREA TABLA*/
                                                Ext.getCmp("gridDetalleUpload").destroy();
                                                var newGrid =
                                                Ext.create('Ext.grid.Panel', {
                                                    store: "jsonInstanciaDetalle",
                                                    id:"gridDetalleUpload",
                                                    title: 'Detalle ['+record.get("id_carga")+']',
                                                    dockedItems: [{
                                                        xtype: 'pagingtoolbar',
                                                        store: "jsonInstanciaDetalle",   // same store GridPanel is using
                                                        dock: 'bottom',
                                                        displayInfo: true
                                                    }]
                                                });

                                                Ext.getCmp("panel_main").add(newGrid);


                                                /*AGREGA COLUMNAS*/
                                                var basePos = 1;
                                                var columns = new Array();

                                                Ext.each(json.data, function(p,v){
                                                    var c=  { 	 xtype: 'gridcolumn',
                                                            menuDisabled: true,
                                                            dataIndex: p.name,
                                                            text: p.name ,
                                                            "hidden": false ,
                                                            width: 120
                                                        };


                                                    columns.push(c);
                                                    basePos++;
                                                });

                                                Ext.getCmp("gridDetalleUpload").headerCt.insert(basePos, columns);


                                                Ext.getStore("jsonInstanciaDetalle").getProxy().setExtraParam("id_carga", record.get("id_carga"));
                                                Ext.getStore("jsonInstanciaDetalle").load();



                                            }
                                        });


                                    },
                                    icon: '../../images/btns/database_table.ico'
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                console.log(record.get("cant_error"));

                                if(record.get("cant_error") > 0) {

                                    this.items[0].icon 	  = '../../images/btns/error.ico';
                                    this.items[0].tooltip = 'Se ha(n) encontrado '+record.get("cant_error")+' error(es)';

                                }
                                else if(record.get("cant_error") == "0") {
                                    this.items[0].icon 	  = '../../images/btns/tick.ico';
                                    this.items[0].tooltip = 'Sin errores';
                                }
                                else {
                                    this.items[0].icon 	  = '../../images/btns/cog_error.ico';
                                    this.items[0].tooltip = 'Procesamiento pendiente';
                                }

                            },
                            width: 24,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var p = Ext.getStore("jsonLog").getProxy();
                                        p.setExtraParam("idCarga", record.get("id_carga"));
                                        Ext.getStore("jsonLog").load();

                                        MyApp.app.getController("ctrTool").fnShowWindow("winLog", "main");


                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'form',
            region: 'center',
            id: 'panel_main',
            layout: 'fit',
            header: false,
            title: 'My Panel',
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            icon: '../../images/btns/database_gear.ico',
                            text: 'Configuraci&oacute;n'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = Ext.getCmp("panel_main").getForm();

                                if (form.isValid()) {
                                    // Submit the Ajax request and handle the response
                                    form.submit({
                                        waitMsg:"cargando maestro...",
                                        timeout:3600,
                                        method: 'POST',
                                        url: "../../../servlet/EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&modulo=eje_generico_cargadormaestros&thing=Import&accion=add",
                                        success: function(form, action) {
                                            var json = action.result;

                                            if(json.success == true) {
                                                Ext.Msg.alert('Carga', "Carga realizada correctamente.<br/>"+json.data[0].msg);
                                            }
                                            else {
                                                var msg = "Error desconocido";

                                                if(json.data[0].msg != null) {
                                                    msg = json.data[0].msg;
                                                }

                                                Ext.Msg.alert('Carga', msg);
                                            }

                                            Ext.getStore("jsonInstancia").load();
                                        },
                                        failure: function(form, action) {
                                            var json = action.result;
                                            console.log(json);
                                            var msg = "Error desconocido";


                                            Ext.Msg.alert('Failed', msg);
                                        }
                                    });
                                }
                                else {
                                    Ext.Msg.alert("Error","No fue posible cargar la información, inténtelo nuevamente");
                                }


                            },
                            icon: '../../images/btns/tick.ico',
                            text: 'Importar'
                        },
                        {
                            xtype: 'button',
                            icon: '../../images/btns/cross.ico',
                            text: 'Cancelar'
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    id: 'gridDetalleUpload',
                    title: '',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string',
                            text: 'String'
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    id: 'send_id_carga',
                    fieldLabel: 'Label',
                    name: 'id_carga'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'send_peri_id',
                    fieldLabel: 'Label',
                    name: 'peri_id'
                }
            ]
        }
    ],

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
                var p = Ext.getStore("jsonInstancia").getProxy();
                p.setExtraParam("idperiodo", newValue);


                Ext.getStore("jsonInstancia").load();
    }

});
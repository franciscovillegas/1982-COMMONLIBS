/*
 * File: app/view/panelGrupos.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.panelGrupos', {
    extend: 'Ext.form.Panel',
    alias: 'widget.panelGrupos',

    requires: [
        'MyApp.view.panelGruposViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.toolbar.Paging',
        'Ext.button.Button',
        'Ext.form.field.Text'
    ],

    viewModel: {
        type: 'panelgrupos'
    },
    height: 654,
    id: 'panelGrupos',
    width: 866,
    layout: 'border',
    title: 'Libreta de direcciones y grupos',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            region: 'west',
            split: true,
            width: 284,
            layout: 'fit',
            collapsible: true,
            header: false,
            title: 'My Panel',
            items: [
                {
                    xtype: 'gridpanel',
                    header: false,
                    title: 'My Grid Panel',
                    store: 'libretaJson',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'tipo',
                            text: 'Tipo'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'nombre',
                            menuDisabled: true,
                            text: 'Nombre',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'icon',
                            text: 'Icon'
                        },
                        {
                            xtype: 'actioncolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(record.get("tipo") == "grupo") {
                                    this.items[0].icon = "../../images/btns/group.ico";
                                }
                                else if(record.get("tipo") == "contacto") {
                                    this.items[0].icon = "../../images/btns/bullet_user.ico";
                                }
                                else {
                                    this.items[0].icon = "../../images/btns/error.ico";
                                }

                            },
                            maxWidth: 25,
                            minWidth: 25,
                            width: 25,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        if(Ext.getCmp("panelGrupos_grupo") != null) {
                                            Ext.getCmp("panelGrupos_grupo").destroy();
                                        }

                                        if(Ext.getCmp("panelGrupos_persona") != null) {
                                            Ext.getCmp('panelGrupos_persona').destroy();
                                        }

                                        if(record.get("tipo") == "grupo") {
                                            MyApp.app.getController("ctrTool").fnShowWindow("panelGrupos_grupo", "main_container_grupo");
                                            Ext.getCmp("hidden_id_grupo").setValue(record.get("id_grupo"));
                                            Ext.getCmp("panelGrupos_grupo").setTitle("Editar grupo");
                                            Ext.getCmp("panelGrupos_grupo").loadGrupoDefinition(record.get("id_grupo"));
                                        }
                                        else if(record.get("tipo") == "contacto") {
                                            MyApp.app.getController("ctrTool").fnShowWindow("panelGrupos_persona", "main_container_grupo");
                                            Ext.getCmp("persona_rut").setValue(record.get("rut"));

                                        }
                                        else {

                                        }




                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(record.get("tipo") == "grupo") {
                                    this.items[0].icon = "../../images/btns/cross.ico";
                                }
                                else if(record.get("tipo") == "contacto") {
                                    this.items[0].icon = "";
                                }
                                else if(record.get("tipo") == "malo") {
                                    this.items[0].icon = "";
                                }


                            },
                            maxWidth: 24,
                            minWidth: 24,
                            width: 24,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {


                                        if(record.get("tipo") == "grupo") {
                                            var form = Ext.getCmp('panelGrupos').getForm();

                                            var url = "../../../EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&";
                                            url    += "modulo=eje_generico_correspondenciaautomatica&accion=del&thing=Group";

                                            Ext.MessageBox.confirm('Delete', '¿Está seguro que desea elimninar el grupo '+record.get("nombre")+'?', function(btn){
                                                if(btn === 'yes'){
                                                    form.submit({
                                                        waitMsg:'Eliminando...',
                                                        url: url,
                                                        params: { idgroup : record.get("id_grupo")} ,
                                                        success: function(form,action) {
                                                            var resp = action.result;

                                                            if( resp.success == false) {
                                                                Ext.MessageBox.alert('Error.',action.result.data[0].msg);
                                                            }
                                                            else {
                                                                Ext.MessageBox.alert('Mail', "Grupo eliminado");
                                                                Ext.getStore("libretaJson").load();
                                                            }


                                                        },
                                                        failure: function(form,action){
                                                            console.log(form);
                                                            console.log(action);
                                                            Ext.MessageBox.alert('Error',"Error desconocido");
                                                        }
                                                    });
                                                }
                                            });




                                        }



                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'actioncolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(record.get("tipo") == "grupo") {
                                    this.items[0].icon = "../../images/btns/eye.ico";
                                }
                                else if(record.get("tipo") == "contacto") {
                                    this.items[0].icon = "";
                                }
                                else if(record.get("tipo") == "malo") {
                                    this.items[0].icon = "";
                                }



                            },
                            maxWidth: 24,
                            minWidth: 24,
                            width: 24,
                            menuDisabled: true,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        if(record.get("tipo") == "grupo") {

                                            if(Ext.getCmp("winParticipantesGrupo") != null) {
                                                Ext.getCmp("winParticipantesGrupo").destroy();
                                            }

                                            var json = {id_grupo: record.get("id_grupo")};
                                            MyApp.app.getController("ctrTool").fnShowWindow("winParticipantesGrupo", null, json );

                                        }


                                    }
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'libretaJson'
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                if(Ext.getCmp("panelGrupos_grupo") != null) {
                                    Ext.getCmp("panelGrupos_grupo").destroy();
                                }
                                MyApp.app.getController("ctrTool").fnShowWindow("panelGrupos_grupo", "main_container_grupo");

                            },
                            icon: '../../images/btns/group_add.ico',
                            text: '',
                            tooltip: 'Crea un nuevo grupo'
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            id: 'word_persona',
                            name: 'word_persona',
                            listeners: {
                                specialkey: 'onWord_personaSpecialkey'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.getStore("libretaJson").getProxy().setExtraParam("word",Ext.getCmp("word_persona").getValue());
                                Ext.getStore("libretaJson").load();

                            },
                            maxWidth: 25,
                            minWidth: 25,
                            width: 25,
                            icon: '../../images/btns/search_accounts.ico',
                            text: 'MyButton'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                MyApp.app.getController("ctrTool").fnShowWindow("winUploadMail");
                            },
                            width: 25,
                            icon: '../../images/btns/inbox_upload.ico',
                            text: 'MyButton'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            region: 'center',
            id: 'main_container_grupo',
            layout: 'fit'
        }
    ],

    onWord_personaSpecialkey: function(field, e, eOpts) {
              if(e.keyCode == 13) {
                 Ext.getStore("libretaJson").getProxy().setExtraParam("word",Ext.getCmp("word_persona").getValue());
                 Ext.getStore("libretaJson").load();
              }
    }

});
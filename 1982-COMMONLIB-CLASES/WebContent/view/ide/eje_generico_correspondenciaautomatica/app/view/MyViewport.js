/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'MyApp.view.MyViewportViewModel',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.grid.column.Action',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel'
    ],

    viewModel: {
        type: 'myviewport'
    },
    layout: 'fit',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            layout: 'fit',
            header: false,
            title: 'Mensajer√≠a',
            items: [
                {
                    xtype: 'panel',
                    layout: 'border',
                    header: false,
                    title: 'Formularios, correo y destinanatarios',
                    items: [
                        {
                            xtype: 'treepanel',
                            region: 'west',
                            split: true,
                            width: 300,
                            collapsible: true,
                            header: false,
                            title: 'My Tree Grid Panel',
                            store: 'treeStore',
                            rootVisible: false,
                            columns: [
                                {
                                    xtype: 'treecolumn',
                                    dataIndex: 'text',
                                    text: 'Nodes',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'value',
                                    text: 'Value'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    maxWidth: 20,
                                    minWidth: 20,
                                    width: 20,
                                    flex: 1,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {


                                                if(Ext.getCmp("panelNew") != null) 		{ console.log("del panelNew"); Ext.getCmp("panelNew").destroy(); }
                                                if(Ext.getCmp("panelSended") != null) 	{ console.log("del panelSended"); Ext.getCmp("panelSended").destroy(); }
                                                if(Ext.getCmp("panelPaused") != null) 	{ console.log("del panelPaused"); Ext.getCmp("panelPaused").destroy(); }
                                                if(Ext.getCmp("panelDeleted") != null)  { console.log("del panelDeleted"); Ext.getCmp("panelDeleted").destroy(); }
                                                if(Ext.getCmp("panelDeleted") != null)  { console.log("del panelDeleted"); Ext.getCmp("panelDeleted").destroy(); }
                                                if(Ext.getCmp("panelGrupos") != null)   { console.log("del panelGrupos"); Ext.getCmp("panelGrupos").destroy(); }


                                                if("new" == record.get("key")) {
                                                    //console.log("show new");

                                                    MyApp.app.getController("ctrTool").fnShowWindow("panelNew", "main_container");
                                                }
                                                else if("sended" == record.get("key")) {
                                                    //console.log("show sended");
                                                    MyApp.app.getController("ctrTool").fnShowWindow("panelSended", "main_container");
                                                }
                                                else if("paused" == record.get("key")) {
                                                    //console.log("show paused");
                                                    MyApp.app.getController("ctrTool").fnShowWindow("panelPaused", "main_container");
                                                }
                                                else if("deleted" == record.get("key")) {
                                                    //console.log("show deleted");
                                                    MyApp.app.getController("ctrTool").fnShowWindow("panelDeleted", "main_container");
                                                }
                                                else if("grupos" == record.get("key")) {
                                                    //console.log("show deleted");
                                                    MyApp.app.getController("ctrTool").fnShowWindow("panelGrupos", "main_container");
                                                }
                                            },
                                            icon: '../../images/btns/clipboard_sign.ico'
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                itemdblclick: 'onTreepanelItemDblClick'
                            },
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                Ext.getStore("treeStore").load();
                                            },
                                            icon: '../../images/btns/arrow_refresh.ico'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            region: 'center',
                            id: 'main_container',
                            scrollable: true,
                            layout: 'fit',
                            header: false,
                            title: 'My Panel'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'form',
            hidden: true,
            id: 'frmDummy',
            title: 'My Panel'
        }
    ],

    onTreepanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        if( record.get("tipo") == "field") {
            var msg = Ext.getCmp("dest_body").getValue();
            var freemaker = "${" + record.get("text") + "}";

            Ext.getCmp("dest_body").setValue( msg + freemaker );

             Ext.defer(function() {
               Ext.getCmp("dest_body").focus(false, 100);
               }, 1);
        }


    }

});
/*
 * File: app/view/windowDestinatarios.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.windowDestinatarios', {
    extend: 'Ext.window.Window',
    alias: 'widget.windowDestinatarios',

    requires: [
        'MyApp.view.windowDestinatariosViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.toolbar.Paging',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'windowdestinatarios'
    },
    height: 450,
    id: 'windowDestinatarios',
    width: 389,
    layout: 'fit',
    title: 'Destinatarios',
    modal: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'gridpanel',
            id: 'gridDestinatarios',
            header: false,
            title: 'My Grid Panel',
            forceFit: true,
            store: 'destMailForView',
            columns: [
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'rut',
                    text: 'Rut'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'digito_ver',
                    text: 'Digito Ver'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'nombres',
                    text: 'Nombres',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'ape_paterno',
                    text: 'Ape Paterno'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'ape_materno',
                    text: 'Ape Materno'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'mail',
                    text: 'Mail'
                },
                {
                    xtype: 'actioncolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(record.get("mail") == "grupo") {
                            this.items[0].icon = "../../images/btns/eye.ico";
                        }
                        else {
                            this.items[0].remove();
                        }



                    },
                    maxWidth: 25,
                    minWidth: 25,
                    width: 25,
                    menuDisabled: true,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                if(record.get("mail") == "grupo") {
                                    var json = {id_grupo: record.get("id_grupo"),
                                            id_correspondencia: record.get("id_correspondencia"),
                                        id_timer: record.get("id_timer")};

                                    console.log(json);
                                    MyApp.app.getController("ctrTool")
                                    .fnShowWindow("winParticipantesGrupo","windowDestinatarios",json);
                                }


                            }
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'destMailForView'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            layout: {
                type: 'hbox',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        Ext.getCmp("windowDestinatarios").destroy();
                    },
                    icon: '../../images/btns/tick.ico',
                    text: 'Cerrar'
                }
            ]
        }
    ],
    listeners: {
        show: 'onWindowDestinatariosShow'
    },

    onWindowDestinatariosShow: function(component, eOpts) {
                var s = Ext.getStore("destMailForView");
                var p = s.getProxy();
                p.setExtraParam("id_correspondencia", component.extraParams.id_correspondencia);
                p.setExtraParam("recipient"			, component.extraParams.recipient);
                p.setExtraParam("id_timer"			, component.extraParams.id_timer);


                s.load();

    }

});
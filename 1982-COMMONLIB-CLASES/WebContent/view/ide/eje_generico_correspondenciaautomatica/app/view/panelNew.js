/*
 * File: app/view/panelNew.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.panelNew', {
    extend: 'Ext.form.Panel',
    alias: 'widget.panelNew',

    requires: [
        'MyApp.view.panelNewViewModel',
        'Ext.panel.Panel',
        'Ext.button.Button',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Separator',
        'Ext.form.Label',
        'Ext.form.field.TextArea'
    ],

    viewModel: {
        type: 'panelnew'
    },
    id: 'panelNew',
    layout: 'border',
    title: 'Detalle correo',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            region: 'north',
            height: 150,
            maxHeight: 106,
            minHeight: 106,
            header: false,
            title: 'My Panel',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            id: 'dest_to',
                            fieldLabel: 'To',
                            labelWidth: 30,
                            name: 'dest_to',
                            readOnly: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.define("current_lista", {
                                    statics: {
                                        obj: "destTO",
                                        obj_text : "dest_to"
                                    }
                                });


                                MyApp.app.getController("ctrTool").fnShowWindow("winPersonas");


                            },
                            text: '...'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            id: 'dest_cc',
                            fieldLabel: 'CC',
                            labelWidth: 30,
                            name: 'dest_cc',
                            readOnly: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.define("current_lista", {
                                    statics: {
                                        obj: "destCC",
                                        obj_text : "dest_cc"
                                    }
                                });


                                MyApp.app.getController("ctrTool").fnShowWindow("winPersonas");

                            },
                            text: '...'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            id: 'dest_bcc',
                            fieldLabel: 'BCC',
                            labelWidth: 30,
                            name: 'dest_bcc',
                            readOnly: true
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                Ext.define("current_lista", {
                                    statics: {
                                        obj: "destBCC",
                                        obj_text : "dest_bcc"
                                    }
                                });


                                MyApp.app.getController("ctrTool").fnShowWindow("winPersonas");


                            },
                            text: '...'
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    flex: 1,
                    id: 'form_alias',
                    fieldLabel: 'Label',
                    name: 'form_alias'
                },
                {
                    xtype: 'hiddenfield',
                    flex: 1,
                    id: 'form_idcliente',
                    fieldLabel: 'Label',
                    name: 'form_idcliente'
                },
                {
                    xtype: 'hiddenfield',
                    flex: 1,
                    id: 'ckeditor_data',
                    fieldLabel: 'Label',
                    name: 'ckeditor_data'
                },
                {
                    xtype: 'textfield',
                    flex: 1,
                    id: 'dest_subject',
                    fieldLabel: 'Asunto',
                    labelWidth: 50,
                    name: 'dest_subject',
                    allowBlank: false
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                if(Ext.getCmp("panelNew") != null) 		{ console.log("del panelNew"); Ext.getCmp("panelNew").destroy(); }
                                MyApp.app.getController("ctrTool").fnShowWindow("panelNew", "main_container");


                            },
                            icon: '../../images/btns/new_email.ico',
                            text: ''
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                MyApp.app.getController("ctrTool").fnShowWindow("win_mailhistory", null);

                            },
                            icon: '../../images/btns/folder_vertical_document.ico',
                            text: ''
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var form = Ext.getCmp('panelNew').getForm();
                                if (form.isValid()) {
                                    var url = "../../../EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&";
                                    url    += "modulo=eje_generico_correspondenciaautomatica&accion=add&thing=SaveAndProgramer";

                                    Ext.getCmp("ckeditor_data").setValue(CKEDITOR.instances.dest_body.getData());

                                    //var otherForms = Ext.getCmp('panelNew').getForm().getFieldValues();
                                    //otherForms["programaciones"] = MyApp.app.getController("ctrTool").store_getEncode("programaciones");

                                    form.submit({
                                        waitMsg:'Guardando correo...',
                                        params: {
                                            consulta_to 	: MyApp.app.getController("ctrTool").store_getEncode("destTO"),
                                            consulta_cc 	: MyApp.app.getController("ctrTool").store_getEncode("destCC"),
                                            consulta_bcc 	: MyApp.app.getController("ctrTool").store_getEncode("destBCC"),
                                            programaciones	: MyApp.app.getController("ctrTool").store_getEncode("programaciones")
                                        },
                                        url: url,
                                        timeout : 300000,
                                        success: function(form,action) {
                                            var resp = action.result;

                                            var ok = false;
                                            if(resp != null) {
                                                if(resp.success == true) {
                                                    ok = true;

                                                }
                                            }

                                            if(ok) {
                                                Ext.Msg.alert("Correo", "El correo ha sido guardado",function() {
                                                    //Ext.getCmp("winProgramacion").destroy();
                                                });
                                            }
                                            else {
                                                Ext.MessageBox.alert('Erro', "Ha ocurrido un error extraño, por comunique a su proveedor.");
                                            }
                                        },
                                        failure: function(form,action){
                                            Ext.MessageBox.alert('Error',"Error desconocido");
                                        }
                                    });
                                }
                                else {
                                    Ext.MessageBox.alert('Erro', "Debe al menos ingresar los campos en rojo.");
                                }


                            },
                            icon: '../../images/btns/diskette.ico',
                            text: ''
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {

                                var form = Ext.getCmp('panelNew').getForm();
                                if (form.isValid()) {
                                    var url = "../../../EjeCore?claseweb=cl.eje.view.sencha.ConfSegura&";
                                    url    += "modulo=eje_generico_correspondenciaautomatica&accion=add&thing=SaveAndSendMail";

                                    Ext.getCmp("ckeditor_data").setValue(CKEDITOR.instances.dest_body.getData());

                                    form.submit({
                                        waitMsg:'Guardando...',
                                        url: url,
                                        params : {
                                            consulta_to  : MyApp.app.getController("ctrTool").store_getEncode("destTO"),
                                            consulta_cc  : MyApp.app.getController("ctrTool").store_getEncode("destCC"),
                                            consulta_bcc : MyApp.app.getController("ctrTool").store_getEncode("destBCC")
                                        },
                                        success: function(form,action) {
                                            var resp = action.result;

                                            if( resp.success == false) {
                                                Ext.MessageBox.alert('Error.',action.result.data[0].msg);
                                            }
                                            else {
                                                Ext.MessageBox.alert('Mail', "Correo enviado");
                                            }


                                        },
                                        failure: function(form,action){
                                            Ext.MessageBox.alert('Error',"Error desconocido");
                                        }
                                    });
                                }
                                else {
                                    Ext.MessageBox.alert('Erro', "Debe al menos ingresar los campos en rojo.");
                                }


                            },
                            hidden: true,
                            icon: '../../images/btns/oms_send.ico',
                            tooltip: 'Enviar correo ahora'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {

                                var form = Ext.getCmp('panelNew').getForm();
                                if (form.isValid()) {
                                    MyApp.app.getController("ctrTool").fnShowWindow("winProgramacion");
                                }
                                else {
                                    Ext.MessageBox.alert('Erro', "Debe al menos ingresar los campos en rojo.");
                                }



                            },
                            icon: '../../images/btns/time_add.ico',
                            text: '',
                            tooltip: 'Programar envío para después.'
                        },
                        {
                            xtype: 'label',
                            id: 'label_formulario_actual'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            id: 'hidden_idcorrespondencia',
                            fieldLabel: 'ID_CORRESPONDENCIA',
                            labelWidth: 150,
                            name: 'id_correspondencia'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            region: 'center',
            id: 'panel_body_container',
            scrollable: false,
            layout: 'fit',
            title: 'Cuerpo del mensaje',
            items: [
                {
                    xtype: 'textareafield',
                    id: 'dest_body',
                    fieldLabel: 'Label',
                    hideLabel: true,
                    name: 'dest_body'
                }
            ]
        }
    ],
    listeners: {
        render: 'onPanelNewRender'
    },

    onPanelNewRender: function(component, eOpts) {
                Ext.getStore("dest").removeAll(true);
                Ext.getStore("destTO").removeAll(true);
                Ext.getStore("destCC").removeAll(true);
                Ext.getStore("destBCC").removeAll(true);
                Ext.getStore("programaciones").removeAll(true);

        CKEDITOR.replace("dest_body", {
              language: 'es',
              on : {
                 // maximize the editor on startup
                 'instanceReady' : function( evt ) {
                    evt.editor.resize("100%", Ext.getCmp("panel_body_container").getHeight());
                 }
              }
           });


    }

});
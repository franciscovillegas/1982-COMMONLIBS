/*
 * File: app/view/MyViewport1.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport1', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport1',

    requires: [
        'MyApp.view.MyViewport1ViewModel',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging',
        'Ext.toolbar.Separator'
    ],

    viewModel: {
        type: 'myviewport1'
    },
    layout: 'fit',

    items: [
        {
            xtype: 'tabpanel',
            activeTab: 0,
            items: [
                {
                    xtype: 'panel',
                    id: 'panelEngine',
                    padding: 10,
                    title: 'Engine',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'form',
                            height: 155,
                            id: 'formMemory',
                            bodyPadding: 10,
                            header: false,
                            title: 'My Form',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'panel',
                                    flex: 1,
                                    width: 983,
                                    header: false,
                                    title: 'My Panel',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: 'max_memory',
                                            name: 'max_memory'
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: 'total_memory',
                                            name: 'total_memory'
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: 'used_memory',
                                            name: 'used_memory'
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: 'free_memory',
                                            name: 'free_memory'
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                ctr.Principal.fnRefreshMemory();
                                            },
                                            icon: '../../images/btns/arrow_refresh.ico',
                                            text: '',
                                            bind: {
                                                tooltip: 'refrescar'
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            height: 220,
                            width: 1003,
                            title: 'Class loader',
                            store: 'jsonClasses',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 248,
                                    dataIndex: 'key',
                                    text: 'Key',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 400,
                                    dataIndex: 'value',
                                    text: 'Object'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'live',
                                    text: 'Live time'
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true,
                                    store: 'jsonClasses'
                                },
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                ctr.Principal.fnRefreshClasses();
                                            },
                                            id: 'btnRefresh',
                                            icon: '../../images/btns/arrow_refresh.ico',
                                            text: '',
                                            bind: {
                                                tooltip: 'Refrescar'
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                Ext.Ajax.request({
                                                    url: '../../../EjeI',
                                                    params : {
                                                        modulo :"eje_generico_engine",
                                                        thing: "ClassesClear",
                                                        accion : "upd"
                                                    },

                                                    success: function(response, opts) {
                                                        var obj = Ext.decode(response.responseText);
                                                        Ext.getStore("jsonClasses").load();
                                                    },

                                                    failure: function(response, opts) {
                                                        var obj = Ext.decode(response.responseText);
                                                        ctr.Tool.msgError(obj);
                                                    }
                                                });

                                            },
                                            id: 'btnClear',
                                            icon: '../../images/btns/cog_delete.ico',
                                            text: '',
                                            bind: {
                                                tooltip: 'Limpiar SingleFactory'
                                            }
                                        },
                                        {
                                            xtype: 'tbseparator'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                ctr.Principal.setStateClassesOnOff(button.pressed);
                                            },
                                            focusOnToFront: false,
                                            id: 'btnClassesOnOff',
                                            enableToggle: true,
                                            icon: '../../images/btns/microformats.ico',
                                            text: '',
                                            bind: {
                                                tooltip: 'Activar / desactivar SingleFactory'
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]

});
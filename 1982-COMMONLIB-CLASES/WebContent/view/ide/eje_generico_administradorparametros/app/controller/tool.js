/*
 * File: app/controller/tool.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.tool', {
    extend: 'Ext.app.Controller',

    fnGetCheckItemsTree: function(nodo, dataName) {

        var strLocales = "";

        try {
            if(nodo != null) {
                nodo.eachChild(function(nodeHijo) {
                   // console.log(nodeHijo);
                    var unid_ID = nodeHijo.get(dataName);

                    if (nodeHijo.get('activo')==true){
                        if (strLocales!='' && strLocales!=null){
                            strLocales+=',';
                        }
                        strLocales=strLocales+unid_ID;
                    }

                    var casiResponse = MyApp.app.getController("ctrTool").fnGetCheckItemsTree(nodeHijo, dataName);

                    if(casiResponse != null && casiResponse != ""){
                        if(strLocales != "" && strLocales !=null){
                            strLocales +=',';
                        }
                        strLocales += casiResponse;
                    }
                });
            }

        }
        catch(e) {
            console.log(e);
        }

        return strLocales;

    },

    fnSetCheckItemsTree: function(nodo, functionNode) {
                try {
                    if(nodo != null) {
                        nodo.eachChild(function(nodeHijo) {
                            var f = eval(functionNode);
                            f(nodeHijo);


                            MyApp.app.getController("ctrTool").fnSetCheckItemsTree(nodeHijo, functionNode);


                        });
                    }

                }
                catch(e) {
                    console.log(e);
                }


    },

    showWindow: function(windowID, parentWindowID) {
                try {
                    var id = "MyApp.view."+windowID;

                    if(Ext.get(windowID) == null) {
                        var win = Ext.create(id);
                        if(parentWindowID != null) {
                            Ext.getCmp(parentWindowID).add(win);

                            try {
                                    Ext.getCmp(parentWindowID).setConstrainContainer(win);
                            }
                            catch(e) {

                            }
                        }

                        win.show();
                    }
                    else {
                        Ext.get(windowID).show();
                        Ext.get(windowID).focus();
                    }
                }
                catch(e) {
                    console.log(e);
                }


    },

    getSeleccionOfGrid: function(gridID, keyRecord) {

                var strPersonas = '';

                var seleccionados=Ext.getCmp(gridID).getSelectionModel().getSelection();

                var y = seleccionados.length;
                if (y>0){
                    Ext.each(seleccionados, function(record, index, allRecords) {
                        if (strPersonas!==''){
                            strPersonas=strPersonas+',';
                        }
                        strPersonas=strPersonas+record.get(keyRecord);

                    });
                }

                return strPersonas;
    },

    getSeleccionOfModel: function(model, keyRecord) {
                var strPersonas = '';

                try {
                    var seleccionados= model.getSelection();

                    var y = seleccionados.length;
                    if (y>0){
                        Ext.each(seleccionados, function(record, index, allRecords) {
                            if (strPersonas!==''){
                                strPersonas=strPersonas+',';
                            }
                            strPersonas=strPersonas+record.get(keyRecord);

                        });
                    }
                }
                catch(e) {
                    console.log(e);
                }

                return strPersonas;
    },

    getArrayFromGridTree: function(treeKey) {
                var treeNode = Ext.getCmp(treeKey).getRootNode();
                var str = MyApp.app.getController("ctrTool")
                                   .fnGetCheckItemsTree(treeNode,"unid_id");
               // console.log(str);
                return JSON.parse("["+str+"]");
    },

    getArrayFromGrid: function(gridKey, keyRecord) {
                        return JSON.parse("["+MyApp.app.getController("tool")
                                          .getSeleccionOfGrid
                                          (gridKey,keyRecord)+"]");
    },

    fnSetComboFromStore: function(storeID, fieldIDWithBooleanValue,comboID) {
                Ext.getStore(storeID).each(function(record,idx){
                    if(record.get(fieldIDWithBooleanValue) == "1"    ||
                       record.get(fieldIDWithBooleanValue) ==  1     ||
                       record.get(fieldIDWithBooleanValue) == "true" ||
                       record.get(fieldIDWithBooleanValue) == true) {

                        Ext.getCmp(comboID).setValue(record);
                    }
                });
    },

    loadFromRepositorio: function() {

        var form = Ext.getCmp("form").getForm();
        form.submit({
            url: '../../EjeCoreI',
            params: {
                clasweb: "cl.eje.view.sencha.Conf",
                modulo: "eje_generico_administradorparametros",
                thing: "ModuloMaestro",
                accion: "get"
            },
            method: 'POST',
            waitMsg: 'Actualizando parametro desde el repositorio...',
            success: function (form, action) {
                console.log(action.response.responseText);
            }
        });


    }

});

/*
 * File: app/controller/ctrTool.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ctrTool', {
    extend: 'Ext.app.Controller',

    consolelog: function(msg) {
        try {
            console.log(msg);
        }
        catch(e) {
        }
    },

    fnErrorDetectado: function() {
        var mensg='<p>Ha ocurido un error al generar su solicitud.</p> ';
        mensg=mensg+'<p>Por favor int√©ntelo nuevamente.</p> ';

        Ext.Msg.show({
            title: 'Error inesperado',
            msg: mensg,
            buttons: Ext.Msg.OK,
            icon: Ext.Msg.ERROR
        });
    },

    fnAbrirFormulario: function(pnlPanel, mwWindow) {
        var view = 'MyApp.view.'+mwWindow;
        var idPanel = pnlPanel.replace('.','');
        var idWindwow = mwWindow.replace('.','');

        if(Ext.get(idWindwow) === null) {
            var win = Ext.create(view);
            Ext.getCmp(idPanel).add(win);
            win.show();
        }
        else {
            Ext.WindowMgr.bringToFront(idWindwow);
        }
    },

    fnDelSeleccionados: function(idGrilla) {
        var grid = Ext.getCmp(idGrilla);
        var store = grid.getStore();

        var selectedRecord = grid.getSelectionModel().getSelection()[0];
        var row = grid.store.indexOf(selectedRecord);

        store.removeAt(row);

        if (store.getCount() > row) {
            grid.getSelectionModel().select(row);
        }else if (store.getCount() > 0) {
            grid.getSelectionModel().select(store.getCount()-1);
        }
    },

    fnGetUrlParameter: function(sParam) {
        /*
        var sPageURL = window.location.search.substring(1);
        var sURLVariables = sPageURL.split('&');

        return sURLVariables[0];

        for (var i = 0; i < sURLVariables.length; i++) {
            var sParameterName = sURLVariables[i].split('=');
            if (sParameterName[0] == sParam) {
                return sParameterName[1];
            }
        }
        */

        var url = document.location.href;
        var inicio = document.location.href.indexOf("?");
        var queryString = url.substring(inicio + 1, url.length);
        var params = Ext.Object.fromQueryString(queryString);
        return params;
    },

    getParams: function() {
                var url = document.location.href;
                var inicio = document.location.href.indexOf("?");
                var queryString = url.substring(inicio + 1, url.length);
                var params = Ext.Object.fromQueryString(queryString);


                return params;
    },

    showWindow: function() {
                var id = "MyApp.view."+windowID;

                if(Ext.get(windowID) == null) {
                    var win = Ext.create(id);
                    if(parentWindowID != null) {
                        Ext.getCmp(parentWindowID).add(win);
                    }

                    win.show();
                }
                else {
                    Ext.get(windowID).show();
                    Ext.get(windowID).focus();
                }
    }

});

/*
 * File: app/controller/ISM/Filtros.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ISM.Filtros', {
    extend: 'Ext.app.Controller',

    control: {
        "#sldISM_Radio": {
            change: 'onSliderChange_Radio'
        },
        "#btnISM_Generar": {
            click: 'onButtonClick_Generar'
        },
        "#btnISM_Descargar": {
            click: 'onButtonClick_Descargar'
        },
        "#cmbISM_Cliente": {
            change: 'onComboboxChange_Cliente'
        },
        "#MyViewport": {
            activate: 'onViewportActivate'
        }
    },

    onSliderChange_Radio: function(slider, newValue, thumb, eOpts) {
        Ext.getCmp('sldISM_Radio').labelEl.dom.innerText = 'Radio ('+newValue+'mts.)';
    },

    onButtonClick_Generar: function(button, e, eOpts) {
                this.fnGenerar();
                this.fnGenerarDetalle();
    },

    onButtonClick_Descargar: function(button, e, eOpts) {
                this.fnDescargar();
    },

    onComboboxChange_Cliente: function(field, newValue, oldValue, eOpts) {
        this.fnActivarCliente(newValue);
    },

    onViewportActivate: function(component, eOpts) {
        console.log("showViewPort");


    },

    fnActivarCliente: function(idcliente) {
        Ext.getStore('ISM.PorPersona.dsPersonas').removeAll();
        Ext.getStore('ISM.PorLocal.jsGetPersonas').removeAll();

        Ext.apply(Ext.getStore('ISM.PorPersona.jsGetPersonas').getProxy().extraParams, {idcliente: idcliente});
        Ext.apply(Ext.getStore('ISM.PorPersona.tsLocales').getProxy().extraParams, {idcliente: idcliente, Personas: 0});
        Ext.apply(Ext.getStore('ISM.PorLocal.jsGetPersonas').getProxy().extraParams, {idcliente: idcliente});
        Ext.apply(Ext.getStore('ISM.PorLocal.tsLocales').getProxy().extraParams, {idcliente: idcliente});
        Ext.apply(Ext.getStore('ISM.jsGetMapa').getProxy().extraParams, {idcliente: idcliente});

        Ext.getStore('ISM.PorPersona.tsLocales').load();
        Ext.getStore('ISM.PorLocal.tsLocales').load();
    },

    fnGenerar: function() {
        var strPersonas='';

        var fechadesde = Ext.Date.format(Ext.getCmp('dteISM_Desde').getValue(), 'Ymd');
        var fechahasta = Ext.Date.format(Ext.getCmp('dteISM_Hasta').getValue(), 'Ymd');


        var store=Ext.getStore('ISM.PorPersona.dsPersonas');
        var x=0;
        var y=store.count();
        store.each(function(record) {
            if (strPersonas!==''){
                strPersonas=strPersonas+',';
            }
            strPersonas=strPersonas+record.get('idusuario');
        });


        if (valido(fechadesde, fechahasta, strPersonas)) {

            Ext.apply(Ext.getStore('ISM.jsGetMapa').getProxy().extraParams, {
                fechadesde		: fechadesde,
                fechahasta		: fechahasta,
                personas		: strPersonas,
            });

            var x=0;
            Ext.getStore('ISM.jsGetMapa').load({
                callback: function(records, operation, success, response) {

                    var markers = [];
                    var y = Ext.getStore('ISM.jsGetMapa').count();

                    if (y===0){
                        Ext.Msg.show({
                            title: 'Sin datos',
                            msg: 'Sin datos para los filtros seleccionados.',
                            buttons: Ext.Msg.OK,
                            icon: Ext.Msg.INFO
                        });
                    }else{

                        Ext.each(records, function(record, index) {

                            var usuario = record.get('nombreusuario');
                            var cargo = record.get('cargo');
                            var fecha = Ext.Date.format(record.get('fecha'),'d/m/Y');
                            var hora = record.get('hora');
                            var titulo = usuario+' '+fecha+' '+hora;
                            var latitud = record.get('latmrk');
                            var longitud = record.get('lonmrk');
                            var icono = '../../images/btns/map_pin_'+record.get('tipo')+'.png';
                            var tipo='Ingreso';
                            var foto='../../../Tool?temporal/filesUnicos/sinfoto.jpg';
                            if (record.get('tipo')===2){
                                tipo='Salida';
                            }
                            if (record.get('foto')!==''){
                                foto=record.get('foto');
                            }
                            var contenido = '<table style="width: 100%"> ';
                            contenido = contenido + '	<tr> ';
                            contenido = contenido + '		<td rowspan="4" style="width: 81px"> ';
                            contenido = contenido + '			<input type="image" height="84" width="70" src="'+foto+'"/></td> ';
                            contenido = contenido + '		<td>'+usuario+'</td> ';
                            contenido = contenido + '	</tr> ';
                            contenido = contenido + '	<tr> ';
                            contenido = contenido + '		<td>'+cargo+'</td> ';
                            contenido = contenido + '	</tr> ';
                            contenido = contenido + '	<tr> ';
                            contenido = contenido + '		<td>'+tipo+': '+fecha+' '+hora+'</td> ';
                            contenido = contenido + '	</tr> ';
                            contenido = contenido + '	<tr> ';
                            contenido = contenido + '		<td> </td> ';
                            contenido = contenido + '	</tr> ';
                            contenido = contenido + '</table> ';

                            //window.setTimeout(function() {
                            markers.push({
                                title:	titulo,
                                lat: latitud,
                                lng: longitud,
                                icon: icono,
                                animation: google.maps.Animation.DROP,
                                listeners: {
                                    click: function(e){
                                        openInfoWindow(contenido, this);
                                    }
                                }
                            });
                            //}, x * 200);

                            x++;

                            if (x===y){
                                fnEditar(markers);
                            }

                        });
                    }
                }
            });

        }

        function openInfoWindow(content, marker) {

            infoBubble = new InfoBubble({
                content: content,//'<div class="example">'+content+'</div>',
                position: new google.maps.LatLng(marker.lat, marker.lng),
                shadowStyle: 1,
                padding: 5,
                borderRadius: 4,
                minWidth: 300,
                minHeight: 105,
                //borderWidth:1,
                //borderColor: '#2c2c2c',
                disableAutoPan: true,
                hideCloseButton: false,
                //backgroundClassName: 'example',
                arrowSize: 0,
                arrowPosition:7,
                arrowStyle:3
            });

            infoBubble.open(Ext.getCmp('mapISM').gmap,marker);

            //var div = document.createElement('DIV');
            //div.innerHTML = content;
            //infoBubble.addTab('A Tab', div);
            //infoBubble.addTab('A Tab', div);

        }

        function toggleBounce() {

            if (marker.getAnimation() !== null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(google.maps.Animation.BOUNCE);
            }
        }

        function fnEditar(markers){

            var item = {
                id: 'mapISM',
                xtype: 'gmappanel',
                gmapType: 'map',
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                markers: markers,
                mapOptions : {
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }
            };

            Ext.getCmp('pnlISM_Descanso').remove(0);
            Ext.getCmp('pnlISM_Descanso').add(item);
            Ext.getCmp('pnlISM_Descanso').doLayout();

        }

        function valido(fechadesde, fechahasta, personas){

            var msgGen='';
            var msgVal='';
            var existe=false;

            var strMsgPersonas='';

            if (!fechadesde){
                msgVal=msgVal+compMsg('Fecha desde');
            }
            if (!fechahasta){
                msgVal=msgVal+compMsg('Fecha hasta');
            }
            if (!personas){
                msgVal=msgVal+compMsg('Personas');
            }

            if (msgVal!==''){
                msgGen='<table style="width: 384px"> ';
                msgGen=msgGen+'	<tr> ';
                msgGen=msgGen+'		<td colspan="2">Falta la siguiente informaci√≥n para generar su solicitud:</td> ';
                msgGen=msgGen+'	</tr> ';
                msgGen=msgGen+msgVal+'</table> ';

                Ext.Msg.show({
                    title: 'Informaci√≥n inconsistente',
                    msg: msgGen,
                    buttons: Ext.Msg.OK,
                    icon: Ext.Msg.ERROR
                });

                return false;

            }else{
                return true;
            }

        }

        function compMsg(strValor){
            var strMsg='';
            strMsg='	<tr style="height: 2px"> ';
            strMsg=strMsg+'		<td style="width:13px">-</td> ';
            strMsg=strMsg+'		<td style="width:496px">'+strValor+'</td> ';
            strMsg=strMsg+'	</tr> ';
            return strMsg;
        }
    },

    fnGenerarDetalle: function() {
        var strPersonas='';

        var fechadesde = Ext.Date.format(Ext.getCmp('dteISM_Desde').getValue(), 'Ymd');
        var fechahasta = Ext.Date.format(Ext.getCmp('dteISM_Hasta').getValue(), 'Ymd');


        var store=Ext.getStore('ISM.PorPersona.dsPersonas');
        var x=0;
        var y=store.count();
        store.each(function(record) {
            if (strPersonas!==''){
                strPersonas=strPersonas+',';
            }
            strPersonas=strPersonas+record.get('idusuario');
        });


        Ext.apply(Ext.getStore('jsGetDetallenEW').getProxy().extraParams, {
            fechadesde		: fechadesde,
            fechahasta		: fechahasta,
            personas		: strPersonas
        });
        Ext.getStore('jsGetDetallenEW').load();
    },

    fnCrearMapa: function(posicion) {
        var mapOptions;

        if (posicion===null){
            mapOptions = {
                id: 'mapISM',
                zoom: 13,
            };
        }else{
            mapOptions = {
                id: 'mapISM',
                zoom: 13,
                center: posicion
            };
        }


        map = new google.maps.Map(document.getElementById('pnlISM_Descanso'),
                                  mapOptions);

        if (posicion===null){
            // Try HTML5 geolocation
            if(navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    posicion = new google.maps.LatLng(position.coords.latitude,
                                                      position.coords.longitude);

                    var infowindow = new google.maps.InfoWindow({
                        map: map,
                        position: posicion,
                        content: 'Usted esta aqu√≠'
                    });

                    map.setCenter(posicion);
                }, function() {
                    handleNoGeolocation(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }

            function handleNoGeolocation(errorFlag) {
                var content;

                if (errorFlag) {
                    content = 'Error: Servicio de Geolocalizacion.';
                } else {
                    content = 'Error: Su navegador no soporta geolocalizacion.';
                }

                var options = {
                    map: map,
                    position: new google.maps.LatLng(60, 105),
                    content: content
                };

                var infowindow = new google.maps.InfoWindow(options);
                map.setCenter(options.position);
            }
        }
    },

    fnDescargar: function() {

        var fechadesde = Ext.Date.format(Ext.getCmp('dteISM_Desde').getValue(), 'Ymd');
        var fechahasta = Ext.Date.format(Ext.getCmp('dteISM_Hasta').getValue(), 'Ymd');
        var strPersonas= "";

        var store=Ext.getStore('ISM.PorPersona.dsPersonas');
        var x=0;
        var y=store.count();
        store.each(function(record) {
            if (strPersonas!==''){
                strPersonas=strPersonas+',';
            }
            strPersonas=strPersonas+record.get('idusuario');
        });

        var vUrl = "../../../EjeCoreI?";
        vUrl += "claseweb=cl.imasd.view.sencha.anywhere.Conf";
        vUrl += "&modulo=anywhere_ipos_administraralertas";
        vUrl += "&accion=get";
        vUrl += "&thing=Excel";
        vUrl += "&fechadesde="+fechadesde;
        vUrl += "&fechahasta="+fechahasta;
        vUrl += "&personas="+strPersonas;

        window.open(vUrl);
    },

    initViewport: function() {
        console.log("initViewport");

        Ext.define('ctrTool', {
            statics: {
                AbrirFormulario: function(pnlPanel, mwWindows) {return MyApp.app.getController('ctrTool').fnAbrirFormulario(pnlPanel, mwWindows);},
                DelSeleccionados: function(grid) {return MyApp.app.getController('ctrTool').fnDelSeleccionados(grid);},
                getUrlParameter: function(param) {return MyApp.app.getController('ctrTool').fnGetUrlParameter(param);},
                log: function(msg) {return MyApp.app.getController('ctrTool').consolelog(msg);},
                msgError: function() {return MyApp.app.getController('ctrTool').fnErrorDetectado();},
            }
        });

        Ext.define('ctrISM', {
            statics: {
                Filtros: MyApp.app.getController('ISM.Filtros'),
                PorPersona: MyApp.app.getController('ISM.Filtros.ctrPorPersona'),
                PorLocal: MyApp.app.getController('ISM.Filtros.ctrPorLocal'),
            }
        });


        var jsParams = ctrTool.getUrlParameter();

        Ext.apply(Ext.getStore('ISM.jsGetClientes').getProxy().extraParams, jsParams);
        Ext.getStore('ISM.jsGetClientes').load();

        Ext.getStore('ISM.jsGetClientes').load({
            callback: function(records, operation, success, response) {
                if (Ext.getStore('ISM.jsGetClientes').count()===1){
                    var idcliente = Ext.getStore('ISM.jsGetClientes').data.items[0].get('idcliente');
                    Ext.getCmp('cmbISM_Cliente').setValue(idcliente);
                }
            }
        });

        Ext.getCmp('dteISM_Desde').setValue(new Date());
        Ext.getCmp('dteISM_Hasta').setValue(new Date());
    }

});

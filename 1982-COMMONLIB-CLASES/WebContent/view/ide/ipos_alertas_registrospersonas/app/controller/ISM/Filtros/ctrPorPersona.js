/*
 * File: app/controller/ISM/Filtros/ctrPorPersona.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ISM.Filtros.ctrPorPersona', {
    extend: 'Ext.app.Controller',

    control: {
        "#btnISM_PorLocal_Persona_Add": {
            click: 'onButtonClick_Persona_Add'
        },
        "#btnISM_PorLocal_Persona_Del": {
            click: 'onButtonClick_Persona_Del'
        },
        "#tbxISM_Persona_Filtro": {
            change: 'onTextfieldChange_Persona_Filtro'
        },
        "#ISMPorPersonamwPersonas": {
            afterlayout: 'onWindowAfterLayout_Personas'
        },
        "#btnISM_Personas_Aceptar": {
            click: 'onButtonClick_Personas_Aceptar'
        },
        "#tpnISM_PorPersona_Local": {
            itemclick: 'onTreepanelItemClick_Local'
        }
    },

    onButtonClick_Persona_Add: function(button, e, eOpts) {
        ctrTool.AbrirFormulario('pnlISM_Descanso','ISM.PorPersona.mwPersonas');
    },

    onButtonClick_Persona_Del: function(button, e, eOpts) {
        ctrTool.DelSeleccionados('gpnISM_PorPersona_Personas');
        ctrISM.PorPersona.fnEditarLocales();
    },

    onTextfieldChange_Persona_Filtro: function(field, newValue, oldValue, eOpts) {
        if (newValue.length===0 || newValue.length>3){
            Ext.apply(Ext.getStore('ISM.PorPersona.jsGetPersonas').getProxy().extraParams, {query: newValue});
            Ext.getStore('ISM.PorPersona.jsGetPersonas').load();
        }
    },

    onWindowAfterLayout_Personas: function(container, layout, eOpts) {
        Ext.getStore('ISM.PorPersona.jsGetPersonas').load();
    },

    onButtonClick_Personas_Aceptar: function(button, e, eOpts) {
        this.fnAsignarPersonas();
    },

    onTreepanelItemClick_Local: function(dataview, record, item, index, e, eOpts) {
        var strId = record.get('id');
        var bolAtivo = false;
        var strIcon = '../../images/btns/checkbox_null.png';

        if (record.get('activo')===false){
            strIcon = '../../images/btns/checkbox_add.png';
            bolAtivo = true;
        }

        record.set('icon', strIcon);
        record.set('activo', bolAtivo);

        treeNode = Ext.getCmp('tpnISM_PorPersona_Local').getRootNode();
        treeNode = treeNode.findChild('id',strId,true);
        treeNode.eachChild(
            function(node){
                node.set('icon', strIcon);
                node.set('activo', bolAtivo);
            }
        );
    },

    fnAsignarPersonas: function() {
        var seleccionados=Ext.getCmp('gpnISM_Personas').getSelectionModel().getSelection();
        var x=0;
        var y = seleccionados.length;
        if (y>0){
            Ext.each(seleccionados, function(record, index, allRecords) {
                var idusuario = record.get('idusuario');
                if (Ext.getStore('ISM.PorPersona.dsPersonas').findExact('idusuario', idusuario)===-1){
                    Ext.getStore('ISM.PorPersona.dsPersonas').add(
                        {
                            idusuario: 	idusuario,
                            nombre:		record.get('nombre'),
                        }
                    );
                }
                x++;
                if (x===y){
                    ctrISM.PorPersona.fnEditarLocales();
                    Ext.getCmp('ISMPorPersonamwPersonas').close();
                }
            });
        }
    },

    fnEditarLocales: function() {
        var store=Ext.getStore('ISM.PorPersona.dsPersonas');
        var strPersonas='';
        var x=0;
        var y=store.count();
        store.each(function(record) {
            if (strPersonas!==''){
                strPersonas=strPersonas+',';
            }
            strPersonas=strPersonas+record.get('idusuario');
            x++;
            if (x===y){
                Ext.apply(Ext.getStore('ISM.PorPersona.tsLocales').getProxy().extraParams, {Personas: strPersonas});
                Ext.getStore('ISM.PorPersona.tsLocales').load();
            }
        });


    }

});

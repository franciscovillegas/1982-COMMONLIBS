/*
 * File: app/view/window_preview.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.window_preview', {
    extend: 'Ext.window.Window',
    alias: 'widget.window_preview',

    requires: [
        'MyApp.view.window_previewViewModel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.panel.Panel'
    ],

    viewModel: {
        type: 'window_preview'
    },
    height: 496,
    id: 'window_preview',
    maxHeight: 496,
    maxWidth: 194,
    minHeight: 496,
    minWidth: 194,
    scrollable: 'true',
    width: 194,
    layout: 'fit',
    title: 'Opciones.',
    modal: true,
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            layout: {
                type: 'hbox',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var obj = [];

                        $("#preview_container img").each(function(k,v) {
                            if( $(v).attr('src')  !== '') {
                                obj.push({"src":$(v).attr('src'), "visible": true});
                            }
                            else {
                                obj.push({"src":$(v).attr('title'), "visible": false});
                            }

                        });

                        var f = eval(MyApp.retorno.func);
                        f(obj);

                        Ext.getCmp("window_preview").destroy();
                    },
                    icon: '../../images/btns/tick.ico',
                    text: 'Aceptar'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        Ext.getCmp("window_preview").destroy();
                    },
                    icon: '../../images/btns/cross.ico',
                    text: 'Cancelar'
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'panel',
            height: 430,
            html: '<!DOCTYPE html>\n   <head>\n      <title>panel_control</title>\n      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\n   </head>\n   <body bgcolor="#FFFFFF" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">\n      <!-- Save for Web Slices (panel_control.png) -->\n      <table id="Table_01" width="170" height="302" border="1" cellpadding="0" cellspacing="0">\n         <tr>\n            <td colspan="2" width="83" height="32">\n               <img src="images/panel_control_01.gif" width="83" height="32" alt="" border="1" >\n            </td>\n            <td colspan="2" width="87" height="32">\n               <img src="images/panel_control_02.gif" width="87" height="32" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" rowspan="2" width="83" height="70">\n               <img src="images/panel_control_03.gif" width="83" height="70" alt="" border="1">\n            </td>\n            <td colspan="2" width="87" height="32">\n               <img src="images/panel_control_04.gif" width="87" height="32" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" width="87" height="38">\n               <img src="images/panel_control_05.gif" width="87" height="38" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" width="83" height="32">\n               <img src="images/panel_control_06.gif" width="83" height="32" alt="" border="1">\n            </td>\n            <td colspan="2" width="87" height="32">\n               <img src="images/panel_control_07.gif" width="87" height="32" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" width="83" height="32">\n            	<img src="images/panel_control_26.gif" width="83" height="32" alt="" border="1">\n            </td>\n            <td width="44" height="34">\n            	<img src="images/panel_control_32.gif" width="44" height="34" alt="" border="1">\n            </td>\n            <td width="43" height="34">\n            	<img src="images/panel_control_33.gif" width="43" height="34" alt="" border="1">\n            </td>\n         <tr>\n            <td colspan="2" width="83" height="34">\n               <img src="images/panel_control_08.gif" width="83" height="34" alt="" border="1">\n            </td>\n            <td width="44" height="34">\n               <img src="images/panel_control_09.gif" width="44" height="34" alt="" border="1">\n            </td>\n            <td width="43" height="34">\n               <img src="images/panel_control_10.gif" width="43" height="34" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" width="83" height="33">\n               <img src="images/panel_control_11.gif" width="83" height="33" alt="" border="1">\n            </td>\n            <td colspan="2" width="87" height="33">\n               <img src="images/panel_control_12.gif" width="87" height="33" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td colspan="2" width="83" height="33">\n               <img src="images/panel_control_13.gif" width="83" height="33" alt="" border="1">\n            </td>\n            <td width="44" height="33">\n               <img src="images/panel_control_14.gif" width="44" height="33" alt="" border="1">\n            </td>\n            <td width="43" height="33">\n               <img src="images/panel_control_15.gif" width="43" height="33" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td width="42" height="34">\n               <img src="images/panel_control_16.gif" width="42" height="34" alt="" border="1">\n            </td>\n            <td width="41" height="34">\n               <img src="images/panel_control_17.gif" width="41" height="34" alt="" border="1">\n            </td>\n            <td colspan="2" width="87" height="34">\n               <img src="images/panel_control_18.gif" width="87" height="34" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td width="42" height="34">\n               <img src="images/panel_control_19.gif" width="42" height="34" alt="" border="1">\n            </td>\n            <td width="44" height="34">\n               <img src="images/panel_control_20.gif" width="41" height="34" alt="" border="1">\n            </td>\n            <td width="44" height="34">\n               <img src="images/panel_control_21.gif" width="44" height="34" alt="" border="1">\n            </td>\n            <td width="43" height="34">\n               <img src="images/panel_control_22.gif" width="43" height="34" alt="" border="1">\n            </td>\n         </tr>\n         <tr>\n            <td  colspan="4" width="164" height="34">\n               <img src="images/panel_control_30.png" width="164" height="34" alt="" border="1"> \n            </td>\n         </tr>\n      </table>\n      <!-- End Save for Web Slices -->\n   </body>\n</html>',
            id: 'preview_container',
            maxHeight: 430,
            maxWidth: 190,
            minHeight: 430,
            minWidth: 190,
            scrollable: true,
            width: 190,
            header: false,
            title: 'My Panel'
        }
    ],
    listeners: {
        render: 'onWindow_previewRender',
        show: 'onWindow_previewShow'
    },

    onWindow_previewRender: function(component, eOpts) {
        console.log("render");

        var f = function() {
            var tag = $(this).prop("tagName");
            console.log(tag);

            var o ;
            if(tag == "TD") {
                o = $(this).children('img');
            }
            else if(tag == "IMG") {
                o = $(this);
            }

            console.log(o);

            if(o.attr('src') != '') {
                console.log("setting=''");
                o.attr('title',o.attr("src"));
                o.attr("src", '');
            }
            else {
                console.log("setting='"+o.attr("title")+"'");

                o.attr('src',o.attr("title"));
                o.attr("title",'');
            }
        };


        $("#preview_container td").click(f);

        //$("#preview_container img").click(f);

    },

    onWindow_previewShow: function(component, eOpts) {
                var str = null;

                try {
                    str = Ext.decode(component.extraParams.strJson);
                }
                catch(e) {
                    console.log(e);
                }


                console.log(str);

                $("#preview_container img").each(function() {
                    var obj = $(this);
                    var src = obj.attr("src");

                    //console.log(">>"+src);

                    Ext.iterate(str, function(key, value) {


                        if(key.src == src || key.title == src ) {
                           //console.log("Si es! "+src);


                          if(key.visible) {
                              $(obj).attr('title'	, key.src);
                              $(obj).attr("src"	, key.src);

                              //console.log("VISIBLE!");
                          }
                          else {
                              $(obj).attr('title'	, key.src );
                              $(obj).attr("src"	, "");

                              //console.log("No es VISIBLE!");
                          }
                        }
                    });
                });

                var f = component.extraParams.func;
                 Ext.define('MyApp.retorno', {
                    statics: {
                        func: f
                    }
                });


    }

});